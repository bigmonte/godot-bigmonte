From efe7ef5c6cbf72121e0bcc9a0527fc5a73cacec0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Dominik=20=27dreamsComeTrue=27=20Jasi=C5=84ski?=
 <dominikjasinski@o2.pl>
Date: Fri, 13 Mar 2020 00:07:47 +0100
Subject: [PATCH] Allowing SpinBox & LineEdit to be selected while grabbing
 focus

Fixes: #37011
---
 editor/plugins/canvas_item_editor_plugin.cpp | 16 ++++++++++++++++
 editor/plugins/spatial_editor_plugin.cpp     | 12 ++++++++++++
 scene/gui/line_edit.cpp                      | 17 +++++++++++++++++
 scene/gui/line_edit.h                        |  4 ++++
 scene/gui/spin_box.cpp                       | 20 ++++++++++++++++++--
 scene/gui/spin_box.h                         |  5 +++++
 6 files changed, 72 insertions(+), 2 deletions(-)

diff --git a/editor/plugins/canvas_item_editor_plugin.cpp b/editor/plugins/canvas_item_editor_plugin.cpp
index 5629e3854df..d5afacac12c 100644
--- a/editor/plugins/canvas_item_editor_plugin.cpp
+++ b/editor/plugins/canvas_item_editor_plugin.cpp
@@ -108,6 +108,8 @@ class SnapDialog : public ConfirmationDialog {
 		grid_offset_x->set_allow_greater(true);
 		grid_offset_x->set_suffix("px");
 		grid_offset_x->set_h_size_flags(SIZE_EXPAND_FILL);
+		grid_offset_x->set_select_all_on_focus(true);
+		grid_offset_x->set_focus_mode(FOCUS_ALL);
 		child_container->add_child(grid_offset_x);
 
 		grid_offset_y = memnew(SpinBox);
@@ -117,6 +119,8 @@ class SnapDialog : public ConfirmationDialog {
 		grid_offset_y->set_allow_greater(true);
 		grid_offset_y->set_suffix("px");
 		grid_offset_y->set_h_size_flags(SIZE_EXPAND_FILL);
+		grid_offset_y->set_select_all_on_focus(true);
+		grid_offset_y->set_focus_mode(FOCUS_ALL);
 		child_container->add_child(grid_offset_y);
 
 		label = memnew(Label);
@@ -130,6 +134,8 @@ class SnapDialog : public ConfirmationDialog {
 		grid_step_x->set_allow_greater(true);
 		grid_step_x->set_suffix("px");
 		grid_step_x->set_h_size_flags(SIZE_EXPAND_FILL);
+		grid_step_x->set_select_all_on_focus(true);
+		grid_step_x->set_focus_mode(FOCUS_ALL);
 		child_container->add_child(grid_step_x);
 
 		grid_step_y = memnew(SpinBox);
@@ -138,6 +144,8 @@ class SnapDialog : public ConfirmationDialog {
 		grid_step_y->set_allow_greater(true);
 		grid_step_y->set_suffix("px");
 		grid_step_y->set_h_size_flags(SIZE_EXPAND_FILL);
+		grid_step_y->set_select_all_on_focus(true);
+		grid_step_y->set_focus_mode(FOCUS_ALL);
 		child_container->add_child(grid_step_y);
 
 		child_container = memnew(GridContainer);
@@ -156,6 +164,8 @@ class SnapDialog : public ConfirmationDialog {
 		primary_grid_steps->set_allow_greater(true);
 		primary_grid_steps->set_suffix(TTR("steps"));
 		primary_grid_steps->set_h_size_flags(SIZE_EXPAND_FILL);
+		primary_grid_steps->set_select_all_on_focus(true);
+		primary_grid_steps->set_focus_mode(FOCUS_ALL);
 		child_container->add_child(primary_grid_steps);
 
 		container->add_child(memnew(HSeparator));
@@ -176,6 +186,8 @@ class SnapDialog : public ConfirmationDialog {
 		rotation_offset->set_max(SPIN_BOX_ROTATION_RANGE);
 		rotation_offset->set_suffix("deg");
 		rotation_offset->set_h_size_flags(SIZE_EXPAND_FILL);
+		rotation_offset->set_select_all_on_focus(true);
+		rotation_offset->set_focus_mode(FOCUS_ALL);
 		child_container->add_child(rotation_offset);
 
 		label = memnew(Label);
@@ -188,6 +200,8 @@ class SnapDialog : public ConfirmationDialog {
 		rotation_step->set_max(SPIN_BOX_ROTATION_RANGE);
 		rotation_step->set_suffix("deg");
 		rotation_step->set_h_size_flags(SIZE_EXPAND_FILL);
+		rotation_step->set_select_all_on_focus(true);
+		rotation_step->set_focus_mode(FOCUS_ALL);
 		child_container->add_child(rotation_step);
 
 		container->add_child(memnew(HSeparator));
@@ -206,6 +220,8 @@ class SnapDialog : public ConfirmationDialog {
 		scale_step->set_allow_greater(true);
 		scale_step->set_h_size_flags(SIZE_EXPAND_FILL);
 		scale_step->set_step(0.01f);
+		scale_step->set_select_all_on_focus(true);
+		scale_step->set_focus_mode(FOCUS_ALL);
 		child_container->add_child(scale_step);
 	}
 
diff --git a/editor/plugins/spatial_editor_plugin.cpp b/editor/plugins/spatial_editor_plugin.cpp
index a71cb50db49..702890ee1fd 100644
--- a/editor/plugins/spatial_editor_plugin.cpp
+++ b/editor/plugins/spatial_editor_plugin.cpp
@@ -6203,12 +6203,15 @@ SpatialEditor::SpatialEditor(EditorNode *p_editor) {
 	snap_dialog->add_child(snap_dialog_vbc);
 
 	snap_translate = memnew(LineEdit);
+	snap_translate->set_select_all_on_focus(true);
 	snap_dialog_vbc->add_margin_child(TTR("Translate Snap:"), snap_translate);
 
 	snap_rotate = memnew(LineEdit);
+	snap_rotate->set_select_all_on_focus(true);
 	snap_dialog_vbc->add_margin_child(TTR("Rotate Snap (deg.):"), snap_rotate);
 
 	snap_scale = memnew(LineEdit);
+	snap_scale->set_select_all_on_focus(true);
 	snap_dialog_vbc->add_margin_child(TTR("Scale Snap (%):"), snap_scale);
 
 	_snap_update();
@@ -6227,6 +6230,8 @@ SpatialEditor::SpatialEditor(EditorNode *p_editor) {
 	settings_fov->set_min(MIN_FOV);
 	settings_fov->set_step(0.01);
 	settings_fov->set_value(EDITOR_DEF("editors/3d/default_fov", 70.0));
+	settings_fov->set_select_all_on_focus(true);
+	settings_fov->set_focus_mode(FOCUS_ALL);
 	settings_vbc->add_margin_child(TTR("Perspective FOV (deg.):"), settings_fov);
 
 	settings_znear = memnew(SpinBox);
@@ -6234,6 +6239,8 @@ SpatialEditor::SpatialEditor(EditorNode *p_editor) {
 	settings_znear->set_min(MIN_Z);
 	settings_znear->set_step(0.01);
 	settings_znear->set_value(EDITOR_DEF("editors/3d/default_z_near", 0.05));
+	settings_znear->set_select_all_on_focus(true);
+	settings_znear->set_focus_mode(FOCUS_ALL);
 	settings_vbc->add_margin_child(TTR("View Z-Near:"), settings_znear);
 
 	settings_zfar = memnew(SpinBox);
@@ -6241,6 +6248,8 @@ SpatialEditor::SpatialEditor(EditorNode *p_editor) {
 	settings_zfar->set_min(MIN_Z);
 	settings_zfar->set_step(0.01);
 	settings_zfar->set_value(EDITOR_DEF("editors/3d/default_z_far", 1500));
+	settings_zfar->set_select_all_on_focus(true);
+	settings_zfar->set_focus_mode(FOCUS_ALL);
 	settings_vbc->add_margin_child(TTR("View Z-Far:"), settings_zfar);
 
 	/* XFORM DIALOG */
@@ -6262,6 +6271,7 @@ SpatialEditor::SpatialEditor(EditorNode *p_editor) {
 	for (int i = 0; i < 3; i++) {
 
 		xform_translate[i] = memnew(LineEdit);
+		xform_translate[i]->set_select_all_on_focus(true);
 		xform_translate[i]->set_h_size_flags(SIZE_EXPAND_FILL);
 		xform_hbc->add_child(xform_translate[i]);
 	}
@@ -6275,6 +6285,7 @@ SpatialEditor::SpatialEditor(EditorNode *p_editor) {
 
 	for (int i = 0; i < 3; i++) {
 		xform_rotate[i] = memnew(LineEdit);
+		xform_rotate[i]->set_select_all_on_focus(true);
 		xform_rotate[i]->set_h_size_flags(SIZE_EXPAND_FILL);
 		xform_hbc->add_child(xform_rotate[i]);
 	}
@@ -6288,6 +6299,7 @@ SpatialEditor::SpatialEditor(EditorNode *p_editor) {
 
 	for (int i = 0; i < 3; i++) {
 		xform_scale[i] = memnew(LineEdit);
+		xform_scale[i]->set_select_all_on_focus(true);
 		xform_scale[i]->set_h_size_flags(SIZE_EXPAND_FILL);
 		xform_hbc->add_child(xform_scale[i]);
 	}
diff --git a/scene/gui/line_edit.cpp b/scene/gui/line_edit.cpp
index fdddf0b5fa2..47ee74c3dc0 100644
--- a/scene/gui/line_edit.cpp
+++ b/scene/gui/line_edit.cpp
@@ -934,6 +934,9 @@ void LineEdit::_notification(int p_what) {
 			if (OS::get_singleton()->has_virtual_keyboard())
 				OS::get_singleton()->show_virtual_keyboard(text, get_global_rect(), max_length);
 
+			if (select_all_on_focus) {
+				select_all();
+			}
 		} break;
 		case NOTIFICATION_FOCUS_EXIT: {
 
@@ -949,6 +952,9 @@ void LineEdit::_notification(int p_what) {
 			if (OS::get_singleton()->has_virtual_keyboard())
 				OS::get_singleton()->hide_virtual_keyboard();
 
+			if (select_all_on_focus) {
+				deselect();
+			}
 		} break;
 		case MainLoop::NOTIFICATION_OS_IME_UPDATE: {
 
@@ -1441,6 +1447,16 @@ void LineEdit::deselect() {
 	update();
 }
 
+void LineEdit::set_select_all_on_focus(bool p_select) {
+
+	select_all_on_focus = p_select;
+}
+
+bool LineEdit::is_select_all_on_focus() const {
+
+	return select_all_on_focus;
+}
+
 void LineEdit::selection_delete() {
 
 	if (selection.enabled)
@@ -1877,6 +1893,7 @@ LineEdit::LineEdit() {
 	clear_button_status.pressing_inside = false;
 	shortcut_keys_enabled = true;
 	selecting_enabled = true;
+	select_all_on_focus = false;
 
 	deselect();
 	set_focus_mode(FOCUS_ALL);
diff --git a/scene/gui/line_edit.h b/scene/gui/line_edit.h
index 938974453a7..d178c123161 100644
--- a/scene/gui/line_edit.h
+++ b/scene/gui/line_edit.h
@@ -76,6 +76,7 @@ class LineEdit : public Control {
 	Point2 ime_selection;
 
 	bool selecting_enabled;
+	bool select_all_on_focus;
 
 	bool context_menu_enabled;
 	PopupMenu *menu;
@@ -182,6 +183,9 @@ class LineEdit : public Control {
 	void selection_delete();
 	void deselect();
 
+	void set_select_all_on_focus(bool p_select);
+	bool is_select_all_on_focus() const;
+
 	void delete_char();
 	void delete_text(int p_from_column, int p_to_column);
 	void set_text(String p_text);
diff --git a/scene/gui/spin_box.cpp b/scene/gui/spin_box.cpp
index 576de98a4fd..e8268006c93 100644
--- a/scene/gui/spin_box.cpp
+++ b/scene/gui/spin_box.cpp
@@ -204,9 +204,13 @@ void SpinBox::_notification(int p_what) {
 
 		updown->draw(ci, Point2i(size.width - updown->get_width(), (size.height - updown->get_height()) / 2));
 
-	} else if (p_what == NOTIFICATION_FOCUS_EXIT) {
+	} else if (p_what == NOTIFICATION_FOCUS_ENTER) {
 
-		//_value_changed(0);
+		if (select_all_on_focus) {
+			line_edit->select_all();
+		}
+
+		line_edit->grab_focus();
 	} else if (p_what == NOTIFICATION_ENTER_TREE) {
 
 		_adjust_width_for_icon(get_icon("updown"));
@@ -250,6 +254,16 @@ String SpinBox::get_prefix() const {
 	return prefix;
 }
 
+void SpinBox::set_select_all_on_focus(bool p_select) {
+
+	select_all_on_focus = p_select;
+}
+
+bool SpinBox::is_select_all_on_focus() const {
+
+	return select_all_on_focus;
+}
+
 void SpinBox::set_editable(bool p_editable) {
 	line_edit->set_editable(p_editable);
 }
@@ -301,4 +315,6 @@ SpinBox::SpinBox() {
 	range_click_timer = memnew(Timer);
 	range_click_timer->connect("timeout", callable_mp(this, &SpinBox::_range_click_timeout));
 	add_child(range_click_timer);
+
+	select_all_on_focus = false;
 }
diff --git a/scene/gui/spin_box.h b/scene/gui/spin_box.h
index d3a3d8fe3db..17cbfc7d95d 100644
--- a/scene/gui/spin_box.h
+++ b/scene/gui/spin_box.h
@@ -50,6 +50,8 @@ class SpinBox : public Range {
 	String prefix;
 	String suffix;
 
+	bool select_all_on_focus;
+
 	void _line_edit_input(const Ref<InputEvent> &p_event);
 
 	struct Drag {
@@ -88,6 +90,9 @@ class SpinBox : public Range {
 	void set_prefix(const String &p_prefix);
 	String get_prefix() const;
 
+	void set_select_all_on_focus(bool p_select);
+	bool is_select_all_on_focus() const;
+
 	void apply();
 
 	SpinBox();

