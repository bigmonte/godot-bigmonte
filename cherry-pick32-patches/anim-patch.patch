From d6054d4b91d8dcec51c133a4ae4c92817cba5182 Mon Sep 17 00:00:00 2001
From: jitspoe <jitspoeAyahoooDcom>
Date: Tue, 12 Nov 2019 22:16:13 -0500
Subject: [PATCH 1/2] Fix animation blending bug where an animation with a
 short blend time played immediately after an animation with a long blend time
 would play with a long blend time.

(cherry picked from commit cc057472e5da1c870fdbe57aa2e606f0f03b6260)
(cherry picked from commit 12ba8ef7bc41715d1d5395ea4e8f601befa18858)
---
 scene/animation/animation_player.cpp | 21 +++++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/scene/animation/animation_player.cpp b/scene/animation/animation_player.cpp
index 587485669e1..d5cbe691616 100644
--- a/scene/animation/animation_player.cpp
+++ b/scene/animation/animation_player.cpp
@@ -825,26 +825,35 @@ void AnimationPlayer::_animation_process2(float p_delta, bool p_started) {
 
 	accum_pass++;
 
-	_animation_process_data(c.current, p_delta, 1.0f, c.seeked && p_delta != 0, p_started);
+	float blend = 1.0; // First animation we play at 100% blend
+	
 	if (p_delta != 0) {
 		c.seeked = false;
 	}
 
-	List<Blend>::Element *prev = NULL;
-	for (List<Blend>::Element *E = c.blend.back(); E; E = prev) {
+	List<Blend>::Element *next = NULL;
+	for (List<Blend>::Element *E = c.blend.front(); E; E = next) {
 
 		Blend &b = E->get();
-		float blend = b.blend_left / b.blend_time;
 		_animation_process_data(b.data, p_delta, blend, false, false);
+		blend = 1.0 - b.blend_left / b.blend_time; // This is how much to blend the NEXT animation
 
 		b.blend_left -= Math::absf(speed_scale * p_delta);
 
-		prev = E->prev();
+		next = E->next();
 		if (b.blend_left < 0) {
 
-			c.blend.erase(E);
+			// If the blend of this has finished, we need to remove ALL the previous blends
+			List<Blend>::Element *prev;
+			while (E) {
+				prev = E->prev();
+				c.blend.erase(E);
+				E = prev;
+			}
 		}
 	}
+
+	_animation_process_data(c.current, p_delta, blend, c.seeked && p_delta != 0, p_started);
 }
 
 void AnimationPlayer::_animation_update_transforms() {

From fd3cde7225bd055129abe2841c2a616dc87346fa Mon Sep 17 00:00:00 2001
From: jitspoe <jitspoe@yahoo.com>
Date: Fri, 24 Jan 2020 04:25:38 -0500
Subject: [PATCH 2/2] Fix for animation playing with a blend when you use a
 custom blend time of 0.

(cherry picked from commit cf9d591320139aa64e895b2a8cbbfbe6c564fe29)
(cherry picked from commit 0ddff4595d00e3c7d79e7448077b9775e56517df)
---
 scene/animation/animation_player.cpp | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/scene/animation/animation_player.cpp b/scene/animation/animation_player.cpp
index d5cbe691616..68756575f64 100644
--- a/scene/animation/animation_player.cpp
+++ b/scene/animation/animation_player.cpp
@@ -826,7 +826,7 @@ void AnimationPlayer::_animation_process2(float p_delta, bool p_started) {
 	accum_pass++;
 
 	float blend = 1.0; // First animation we play at 100% blend
-	
+
 	if (p_delta != 0) {
 		c.seeked = false;
 	}
@@ -1206,6 +1206,8 @@ void AnimationPlayer::play(const StringName &p_name, float p_custom_blend, float
 			b.data = c.current;
 			b.blend_time = b.blend_left = blend_time;
 			c.blend.push_back(b);
+		} else {
+			c.blend.clear();
 		}
 	}
 

